services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: agentcloud
      POSTGRES_PASSWORD: agentcloud
      POSTGRES_DB: agentcloud
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U agentcloud']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://agentcloud:agentcloud@db:5432/agentcloud
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8000/healthz || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  dashboard:
    build: .
    command: poetry run streamlit run dashboard/streamlit_app.py --server.port=8501 --server.address=0.0.0.0
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://agentcloud:agentcloud@db:5432/agentcloud
    depends_on:
      - api
    ports:
      - '8501:8501'
    volumes:
      - .:/app
    restart: unless-stopped

  # Metrics services (integrated for observability)
  prometheus:
    image: prom/prometheus:v2.50.0
    volumes:
      - ./docs/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  # Tracing services (integrated for observability)
  jaeger:
    image: jaegertracing/all-in-one:1.55
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686" # Web UI
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    restart: unless-stopped

volumes:
  db_data:
  grafana_data:
